var Format = function() {
	var _adventureNode = function(node) {
		return {
			id: _graphID(node.self),
			title: node.data.title || ''
		};
	};

	var _tagNode = function(node) {
		return {
			id: _graphID(node.self),
			title: node.data.tag || ''
		};
	};

	var _userNode = function(node) {
		return {
			id: _graphID(node.self),
			title: node.data.username || ''
		};
	};

	var _adventures = function(adventures) {
		var i,
			j,
			results = [];
		
		for(i=0, j=adventures.length; i<j; i++){
			results.push( _adventureNode( adventures[i] ) );
		}

		return results;
	};

	var _comment = function(commentVertex, commentEdge) {
		var commentNode;
			if(commentVertex && commentEdge) {
				commentNode = {
					author: _user(commentVertex),
					comment: {
						text: commentEdge.data.text,
						date: commentEdge.data.date,
						id: _graphID(commentEdge.self)
					}
				};
			}
		return commentNode;
	};

	var _comments = function(comments) {
		var i,
			j,
			results = [];
		
		for(i=0, j=comments[0][0].length; i<j; i++){
			// really don't like this nested array stuff, fwiw
			results.push( _comment( comments[0][0][i], comments[0][1][i] ) );
		}

		return results;
	};

	var _graphID = function(nodeUrl) {
		return (typeof nodeUrl === 'string') ? nodeUrl.split('/').pop() : null;
	};

	var _like = function(likeVertex, likeEdge) {
		var likeNode;
			if(likeVertex && likeEdge) {
				likeNode = {
					author: _user(likeVertex),
					like: {
						value: likeEdge.data.value,
						id: _graphID(likeEdge.self)
					}
				};
			}
		return likeNode;
	};

	var _likes = function(likes) {
		var i,
			j,
			results = [];
		
		for(i=0, j=likes[0][0].length; i<j; i++){
			results.push( _like( likes[0][0][i], likes[0][1][i] ) );
		}

		return results;
	};

	var _moment = function(momentNode) {
		var moment = momentNode[0],
			creator = _user( momentNode[1] ),
			comments = _comments( momentNode[2] ),
			likes = _likes( momentNode[3] ),
			tags = _tags( momentNode[4] ),
			users = _users( momentNode[5] );

		return {
			id: _graphID(moment.self),
			imageUrl: moment.data.imageUrl,
			creator: creator,
			date: moment.data.date,
			comments: comments,
			likes: likes,
			tags: tags,
			users: users
		};
	};

	var _moments = function(moments) {
		var i,
			j,
			results = [];

			for(i=0, j=moments.length; i<j; i++){
			results.push( _moment( moments[i] ) );
		}

		return results;
	};

	var _tag = function(tag) {
		return {
			id: _graphID(tag.self),
			title: tag.data.tag
		};
	};

	var _tags = function(tags) {
		var i,
			j,
			results = [];
		
		for(i=0, j=tags.length; i<j; i++){
			results.push( _tag( tags[i] ) );
		}

		return results;
	};

	var _user = function(user) {
		return {
			id: _graphID(user.self),
			photo: user.data.photo || '',
			username: user.data.username || ''
		};
	};

	var _users = function(users) {
		var i,
			j,
			results = [];
		
		for(i=0, j=users.length; i<j; i++){
			results.push( _user( users[i] ) );
		}

		return results;
	};

	return {
		adventureNode : _adventureNode,
		userNode : _userNode,
		tagNode : _tagNode,
		adventures : _adventures,
		comment : _comment,
		comments: _comments,
		graphID : _graphID,
		like: _like,
		likes: _likes,
		moment: _moment,
		moments: _moments,
		tag: _tag,
		tags: _tags,
		user : _user,
		users: _users
	};
};

module.exports = Format;