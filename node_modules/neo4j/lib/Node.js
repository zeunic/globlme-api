/*** Generated by streamline 0.2.5 - DO NOT EDIT ***/
var __rt=require('streamline/lib/callbacks/runtime').runtime(__filename),__func=__rt.__func,__tryCatch=__rt.__tryCatch,__cb=__rt.__cb,__apply=__rt.__apply,__propagate=__rt.__propagate,__trap=__rt.__trap,__future=__rt.__future,__setEF=__rt.__setEF,__g=__rt.__g;
/*     1 */ (function() {
/*     2 */   var Node, Path, PropertyContainer, Relationship, adjustError, status, util, __hasProp = {
/*     3 */   }.hasOwnProperty, __extends = function(child, parent) {
/*     4 */     for (var key in parent) {
/*     4 */       if (__hasProp.call(parent, key)) {
/*     4 */         child[key] = parent[key];
                  };
                };
/*     4 */     function ctor() {
/*     4 */       this.constructor = child;
                };
/*     4 */     ctor.prototype = parent.prototype;
/*     4 */     child.prototype = new ctor;
/*     4 */     child.__super__ = parent.prototype;
/*     4 */     return child;
              };
/*     6 */   status = require("http-status");
/*     8 */   util = require("./util");
/*    10 */   adjustError = util.adjustError;
/*    12 */   PropertyContainer = require("./PropertyContainer");
/*    14 */   Relationship = require("./Relationship");
/*    16 */   Path = require("./Path");
/*    18 */   module.exports = Node = (function(_super) {
/*    20 */     __extends(Node, _super);
/*    22 */     Node.name = "Node";
/*    24 */     function Node(db, data) {
/*    25 */       Node.__super__.constructor.call(this, db, data);
                };
/*    28 */     Node.prototype.toString = function() {
/*    29 */       return ("node @" + this.id);
                };
/*    32 */     Node.prototype.save = function Node_prototype_save__1(_) {
                  var message, response, services, _ref, _ref1, __this = this;
                  var __frame = {
                    name: "Node_prototype_save__1",
                    line: 32
                  };
                  return __func(_, this, arguments, Node_prototype_save__1, 0, __frame, function __$Node_prototype_save__1() {
                    return (function ___(__then) {
                      (function ___(_) {
                        __tryCatch(_, function __$Node_prototype_save__1() {
                          return (function __$Node_prototype_save__1(__then) {
/*    35 */                 if (__this.exists) {
/*    36 */                   return __this._request.put({
/*    37 */                     uri: (("" + __this.self) + "/properties"),
/*    38 */                     json: __this.data
                              }, __cb(_, __frame, 4, 21, function ___(__0, __1) {
/*    36 */                     response = __1;
/*    40 */                     if ((response.statusCode !== status.NO_CONTENT)) {
/*    41 */                       message = (((_ref = response.body) != null) ? _ref.message : void 0);
/*    42 */                       switch (response.statusCode) {
/*    43 */                       case status.BAD_REQUEST:
/*    43 */                         (message || (message = "Invalid data sent"));
/*    44 */                         break;
/*    45 */                       case status.NOT_FOUND:
                                    (message || (message = "Node not found"));
/*    46 */                       };
/*    46 */                       return _(new Error(message));
/*    47 */                     }
                              ;
                                __then();
/*    49 */                   }, true));
                            }
                             else {
                              return __this.db.getServices(__cb(_, __frame, 20, 21, function ___(__0, __2) {
                                services = __2;
                                return __this._request.post({
                                  uri: services.node,
/*    52 */                       json: __this.data
/*    52 */                     }, __cb(_, __frame, 21, 21, function ___(__0, __3) {
/*    53 */                       response = __3;
/*    54 */                       if ((response.statusCode !== status.CREATED)) {
/*    55 */                         message = (((((_ref1 = response.body) != null) ? _ref1.message : void 0)) || "Invalid data sent");
                                    return _(new Error(message));
/*    53 */                       }
/*    57 */                     ;
/*    58 */                       __this._data = response.body;
/*    59 */                       __then();
                                }, true));
                              }, true));
/*    61 */                 }
                          ;
                          })(__then);
                        });
                      })(function ___(error, __result) {
                        __tryCatch(_, function __$Node_prototype_save__1() {
                          if (error) {
                            return _(adjustError(error));
                          }
                           else {
                            _(null, __result);
/*    64 */               }
                        ;
                        });
                      });
                    })(function ___() {
                      __tryCatch(_, _);
                    });
                  });
                };
                Node.prototype["delete"] = function Node_prototype_delete__2(_, force) {
                  var relationship, relationships, _i, _len, __this = this, __arguments = arguments;
                  var __frame = {
                    name: "Node_prototype_delete__2",
/*    68 */         line: 68
                  };
                  return __func(_, this, arguments, Node_prototype_delete__2, 0, __frame, function __$Node_prototype_delete__2() {
                    if ((force == null)) {
                      force = false;
                    }
                  ;
/*    70 */         if (!__this.exists) {
/*    71 */           return _(null);
                    }
                  ;
/*    73 */         return (function ___(__then) {
                      (function ___(_) {
                        __tryCatch(_, function __$Node_prototype_delete__2() {
                          return __this.all(null, __cb(_, __frame, 9, 24, function ___(__0, __1) {
                            relationships = __1;
                            if ((relationships.length && !force)) {
                              return _(new Error((("Could not delete " + __this) + "; still has relationships.")));
/*    77 */                 }
/*    77 */               ;
/*    78 */                 _i = 0;
/*    79 */                 _len = relationships.length;
                            var __5 = false;
                            return (function ___(__break) {
/*    81 */                   var __more;
/*    81 */                   var __loop = __cb(_, __frame, 0, 0, function __$Node_prototype_delete__2() {
                                __more = false;
                                if (__5) {
                                  _i++;
                                }
                                 else {
                                  __5 = true;
/*    81 */                     }
                              ;
                                var __4 = (_i < _len);
                                if (__4) {
                                  relationship = relationships[_i];
                                  return relationship["delete"](__cb(_, __frame, 15, 10, function __$Node_prototype_delete__2() {
/*    81 */                         while (__more) {
                                      __loop();
/*    82 */                         };
/*    83 */                         __more = true;
                                  }, true));
                                }
                                 else {
                                  __break();
                                }
                              ;
                              });
                              do {
                                __loop();
                              } while (__more);
                              __more = true;
                            })(__then);
                          }, true));
                        });
                      })(function ___(error, __result) {
                        __tryCatch(_, function __$Node_prototype_delete__2() {
                          if (error) {
                            return _(adjustError(error));
                          }
                           else {
                            _(null, __result);
/*    86 */               }
                        ;
                        });
                      });
                    })(function ___() {
                      __tryCatch(_, function __$Node_prototype_delete__2() {
                        return __apply(__cb(_, __frame, 20, 13, _, true), Node.__super__["delete"], __this, __arguments, 0);
                      });
                    });
                  });
/*    88 */     };
                Node.prototype.del = Node.prototype["delete"];
                Node.prototype.createRelationshipTo = function Node_prototype_createRelationshipTo__3(otherNode, type, data, _) {
                  var __this = this;
                  var __frame = {
/*    91 */         name: "Node_prototype_createRelationshipTo__3",
/*    93 */         line: 93
                  };
                  return __func(_, this, arguments, Node_prototype_createRelationshipTo__3, 3, __frame, function __$Node_prototype_createRelationshipTo__3() {
                    return __this._createRelationship(__this, otherNode, type, data, __cb(_, __frame, 1, 13, _, true));
                  });
                };
                Node.prototype.createRelationshipFrom = function Node_prototype_createRelationshipFrom__4(otherNode, type, data, _) {
/*    94 */       var __this = this;
                  var __frame = {
                    name: "Node_prototype_createRelationshipFrom__4",
/*    97 */         line: 97
                  };
                  return __func(_, this, arguments, Node_prototype_createRelationshipFrom__4, 3, __frame, function __$Node_prototype_createRelationshipFrom__4() {
                    return __this._createRelationship(otherNode, __this, type, data, __cb(_, __frame, 1, 13, _, true));
                  });
                };
                Node.prototype._createRelationship = function Node_prototype__createRelationship__5(from, to, type, data, _) {
/*    98 */       var createRelationshipURL, message, otherNodeURL, relationship, response, _ref, _ref1, __this = this;
                  var __frame = {
                    name: "Node_prototype__createRelationship__5",
/*   101 */         line: 101
                  };
                  return __func(_, this, arguments, Node_prototype__createRelationship__5, 4, __frame, function __$Node_prototype__createRelationship__5() {
                    return (function ___(__then) {
                      (function ___(_) {
                        __tryCatch(_, function __$Node_prototype__createRelationship__5() {
                          createRelationshipURL = from._data["create_relationship"];
                          otherNodeURL = to.self;
                          return (function __$Node_prototype__createRelationship__5(__then) {
                            if ((((createRelationshipURL != null)) && otherNodeURL)) {
/*   104 */                   return __this._request.post({
/*   105 */                     url: createRelationshipURL,
                                json: {
/*   106 */                       to: otherNodeURL,
/*   107 */                       data: data,
/*   108 */                       type: type
/*   109 */                     }
/*   110 */                   }, __cb(_, __frame, 6, 21, function ___(__0, __1) {
/*   111 */                     response = __1;
/*   112 */                     if ((response.statusCode !== status.CREATED)) {
                                  message = "";
                                  switch (response.statusCode) {
/*   107 */                       case status.BAD_REQUEST:
/*   115 */                         message = ((((((_ref = response.body) != null) ? _ref.message : void 0)) || ((((_ref1 = response.body) != null) ? _ref1.exception : void 0))) || (((((((("Invalid createRelationship: " + from.id) + " ") + type) + " ") + to.id) + " w/ data: ") + (JSON.stringify(data)))));
/*   116 */                         break;
/*   117 */                       case status.CONFLICT:
/*   118 */                         message = "\"to\" node, or the node specified by the URI not found";
/*   118 */                       };
/*   119 */                       return _(new Error(message));
/*   120 */                     }
                              ;
/*   121 */                     relationship = new Relationship(__this.db, response.body, from, to);
/*   121 */                     return _(null, relationship);
/*   122 */                   }, true));
                            }
                             else {
/*   124 */                   return _(new Error("Failed to create relationship"));
                            }
                          ;
/*   126 */               })(__then);
/*   127 */             });
                      })(function ___(error, __result) {
                        __tryCatch(_, function __$Node_prototype__createRelationship__5() {
                          if (error) {
/*   129 */                 return _(adjustError(error));
                          }
                           else {
                            _(null, __result);
                          }
                        ;
                        });
                      });
/*   132 */         })(function ___() {
                      __tryCatch(_, _);
                    });
                  });
                };
                Node.prototype._getRelationships = function Node_prototype__getRelationships__6(direction, type, _) {
                  var data, prefix, relationships, relationshipsURL, resp, types, _this, __this = this;
                  var __frame = {
                    name: "Node_prototype__getRelationships__6",
                    line: 136
                  };
                  return __func(_, this, arguments, Node_prototype__getRelationships__6, 2, __frame, function __$Node_prototype__getRelationships__6() {
                    _this = __this;
/*   136 */         types = null;
                    if ((type != null)) {
                      types = ((type instanceof Array) ? type : [type,]);
                    }
                  ;
                    return (function ___(__then) {
                      (function ___(_) {
                        __tryCatch(_, function __$Node_prototype__getRelationships__6() {
/*   139 */               if ((types != null)) {
/*   140 */                 prefix = __this._data[(("" + direction) + "_typed_relationships")];
/*   141 */                 relationshipsURL = ((prefix != null) ? prefix.replace("{-list|&|types}", types.join("&")) : void 0);
                          }
                           else {
                            relationshipsURL = __this._data[(("" + direction) + "_relationships")];
                          }
                        ;
/*   144 */               if (!relationshipsURL) {
/*   145 */                 return _(new Error("Couldn't find URL of relationships endpoint."));
/*   146 */               }
                        ;
/*   147 */               return __this._request.get(relationshipsURL, __cb(_, __frame, 17, 15, function ___(__0, __1) {
/*   148 */                 resp = __1;
                            if ((resp.statusCode === status.NOT_FOUND)) {
                              return _(new Error("Node not found."));
/*   150 */                 }
/*   151 */               ;
                            if ((resp.statusCode !== status.OK)) {
                              return _(new Error(("Unrecognized response code: " + resp.statusCode)));
/*   153 */                 }
/*   153 */               ;
/*   154 */                 data = JSON.parse(resp.body);
/*   155 */                 relationships = data.map(function(data) {
                              if ((_this.self === data.start)) {
                                return new Relationship(_this.db, data, _this, null);
/*   157 */                   }
/*   158 */                    else {
                                return new Relationship(_this.db, data, null, _this);
                              }
/*   160 */                 ;
/*   161 */                 });
/*   162 */                 return _(null, relationships);
/*   163 */               }, true));
                        });
/*   164 */           })(function ___(error, __result) {
/*   165 */             __tryCatch(_, function __$Node_prototype__getRelationships__6() {
                          if (error) {
                            return _(adjustError(error));
                          }
/*   168 */                else {
                            _(null, __result);
                          }
                        ;
                        });
                      });
/*   170 */         })(function ___() {
                      __tryCatch(_, _);
                    });
                  });
                };
                Node.prototype.getRelationships = function Node_prototype_getRelationships__7(type, _) {
                  var __this = this;
                  var __frame = {
                    name: "Node_prototype_getRelationships__7",
                    line: 174
                  };
                  return __func(_, this, arguments, Node_prototype_getRelationships__7, 1, __frame, function __$Node_prototype_getRelationships__7() {
                    return __this.all(type, __cb(_, __frame, 1, 13, _, true));
/*   174 */       });
                };
                Node.prototype.outgoing = function Node_prototype_outgoing__8(type, _) {
                  var __this = this;
                  var __frame = {
                    name: "Node_prototype_outgoing__8",
                    line: 178
/*   175 */       };
                  return __func(_, this, arguments, Node_prototype_outgoing__8, 1, __frame, function __$Node_prototype_outgoing__8() {
                    return __this._getRelationships("outgoing", type, __cb(_, __frame, 1, 13, _, true));
/*   178 */       });
                };
                Node.prototype.incoming = function Node_prototype_incoming__9(type, _) {
                  var __this = this;
                  var __frame = {
                    name: "Node_prototype_incoming__9",
                    line: 182
/*   179 */       };
                  return __func(_, this, arguments, Node_prototype_incoming__9, 1, __frame, function __$Node_prototype_incoming__9() {
                    return __this._getRelationships("incoming", type, __cb(_, __frame, 1, 13, _, true));
/*   182 */       });
                };
                Node.prototype.all = function Node_prototype_all__10(type, _) {
                  var __this = this;
                  var __frame = {
                    name: "Node_prototype_all__10",
                    line: 186
/*   183 */       };
                  return __func(_, this, arguments, Node_prototype_all__10, 1, __frame, function __$Node_prototype_all__10() {
                    return __this._getRelationships("all", type, __cb(_, __frame, 1, 13, _, true));
/*   186 */       });
                };
                Node.prototype.path = function Node_prototype_path__11(to, type, direction, maxDepth, algorithm, _) {
                  var data, end, length, nodes, path, pathURL, relationships, res, start, _this, __this = this;
                  var __frame = {
                    name: "Node_prototype_path__11",
                    line: 190
/*   187 */       };
                  return __func(_, this, arguments, Node_prototype_path__11, 5, __frame, function __$Node_prototype_path__11() {
                    _this = __this;
/*   190 */         if ((maxDepth == null)) {
                      maxDepth = 1;
                    }
                  ;
                    if ((algorithm == null)) {
                      algorithm = "shortestPath";
                    }
                  ;
/*   193 */         return (function ___(__then) {
/*   194 */           (function ___(_) {
                        __tryCatch(_, function __$Node_prototype_path__11() {
                          pathURL = (("" + __this.self) + "/path");
/*   196 */               data = {
/*   197 */                 to: to.self,
                            relationships: {
                              type: type,
                              direction: direction
                            },
                            max_depth: maxDepth,
/*   200 */                 algorithm: algorithm
/*   201 */               };
/*   202 */               return __this._request.post({
/*   203 */                 url: pathURL,
/*   204 */                 json: data
/*   205 */               }, __cb(_, __frame, 20, 14, function ___(__0, __1) {
                            res = __1;
/*   207 */                 if ((res.statusCode === status.NOT_FOUND)) {
/*   208 */                   return _(null, null);
                            }
/*   210 */               ;
/*   211 */                 if ((res.statusCode !== status.OK)) {
/*   212 */                   return _(new Error(("Unrecognized response code: " + res.statusCode)));
                            }
/*   210 */               ;
/*   214 */                 data = res.body;
/*   215 */                 start = new Node(__this, {
                              self: data.start
                            });
/*   217 */                 end = new Node(__this, {
/*   218 */                   self: data.end
                            });
                            length = data.length;
/*   220 */                 nodes = data.nodes.map(function(url) {
/*   221 */                   return new Node(_this, {
/*   222 */                     self: url
                              });
/*   224 */                 });
/*   225 */                 relationships = data.relationships.map(function(url) {
                              return new Relationship(_this, {
/*   227 */                     self: url,
/*   228 */                     type: type
/*   229 */                   });
/*   230 */                 });
                            path = new Path(start, end, length, nodes, relationships);
                            return _(null, path);
/*   233 */               }, true));
/*   234 */             });
/*   235 */           })(function ___(error, __result) {
/*   236 */             __tryCatch(_, function __$Node_prototype_path__11() {
                          if (error) {
                            return _(adjustError(error));
/*   239 */               }
/*   240 */                else {
                            _(null, __result);
                          }
                        ;
                        });
                      });
/*   242 */         })(function ___() {
                      __tryCatch(_, _);
                    });
                  });
                };
                Node.prototype.getRelationshipNodes = function Node_prototype_getRelationshipNodes__12(rels, _) {
                  var resp, traverseURL, _ref, _ref1, _ref2, _this, __this = this;
                  var __frame = {
                    name: "Node_prototype_getRelationshipNodes__12",
                    line: 246
                  };
                  return __func(_, this, arguments, Node_prototype_getRelationshipNodes__12, 1, __frame, function __$Node_prototype_getRelationshipNodes__12() {
                    _this = __this;
/*   246 */         rels = ((rels instanceof Array) ? rels : [rels,]);
                    return (function ___(__then) {
                      (function ___(_) {
                        __tryCatch(_, function __$Node_prototype_getRelationshipNodes__12() {
                          traverseURL = (((_ref = __this._data["traverse"]) != null) ? _ref.replace("{returnType}", "node") : void 0);
                          if (!traverseURL) {
                            return _(new Error("Traverse not available."));
                          }
/*   249 */             ;
                          return __this._request.post({
                            url: traverseURL,
                            json: {
/*   251 */                   max_depth: 1,
/*   252 */                   relationships: rels.map(function(rel) {
/*   253 */                     if ((typeof rel === "string")) {
                                  return {
                                    type: rel
/*   255 */                       };
/*   256 */                     }
/*   257 */                      else {
/*   258 */                       return rel;
/*   259 */                     }
/*   260 */                   ;
/*   261 */                   })
/*   262 */                 }
                          }, __cb(_, __frame, 9, 15, function ___(__0, __1) {
                            resp = __1;
/*   264 */                 if ((resp.statusCode === 404)) {
/*   265 */                   return _(new Error((((((_ref1 = resp.body) != null) ? _ref1.message : void 0)) || "Node not found.")));
                            }
                          ;
                            if ((resp.statusCode !== 200)) {
                              return _(new Error((((((_ref2 = resp.body) != null) ? _ref2.message : void 0)) || (("Unrecognized response code: " + resp.statusCode)))));
                            }
/*   255 */               ;
/*   270 */                 return _(null, resp.body.map(function(data) {
/*   271 */                   return new Node(_this.db, data);
                            }));
                          }, true));
/*   273 */             });
/*   274 */           })(function ___(error, __result) {
                        __tryCatch(_, function __$Node_prototype_getRelationshipNodes__12() {
                          if (error) {
/*   276 */                 return _(adjustError(error));
/*   277 */               }
                           else {
                            _(null, __result);
                          }
                        ;
                        });
                      });
/*   280 */         })(function ___() {
                      __tryCatch(_, _);
                    });
                  });
                };
                Node.prototype.index = function Node_prototype_index__13(index, key, value, _) {
                  var encodedKey, encodedValue, response, services, url, version, __this = this;
                  var __frame = {
                    name: "Node_prototype_index__13",
                    line: 284
                  };
                  return __func(_, this, arguments, Node_prototype_index__13, 3, __frame, function __$Node_prototype_index__13() {
                    return (function ___(__then) {
/*   284 */           (function ___(_) {
                        __tryCatch(_, function __$Node_prototype_index__13() {
                          if (!__this.exists) {
                            return _(new Error("Node must exists before indexing properties"));
                          }
                        ;
                          return __this.db.getServices(__cb(_, __frame, 6, 19, function ___(__0, __1) {
                            services = __1;
                            return __this.db.getVersion(__cb(_, __frame, 7, 18, function ___(__0, __2) {
                              version = __2;
/*   287 */                   return (function __$Node_prototype_index__13(__then) {
/*   288 */                     if ((version <= 1.4)) {
                                  encodedKey = encodeURIComponent(key);
                                  encodedValue = encodeURIComponent(value);
/*   290 */                       url = ((((((("" + services.node_index) + "/") + index) + "/") + encodedKey) + "/") + encodedValue);
/*   290 */                       return __this._request.post({
/*   291 */                         url: url,
/*   291 */                         json: __this.self
                                  }, __cb(_, __frame, 12, 21, function ___(__0, __3) {
/*   292 */                         response = __3;
/*   293 */                         __then();
/*   294 */                       }, true));
/*   295 */                     }
/*   296 */                      else {
/*   297 */                       return __this._request.post({
/*   298 */                         url: ((("" + services.node_index) + "/") + index),
                                    json: {
/*   296 */                           key: key,
                                      value: value,
                                      uri: __this.self
                                    }
                                  }, __cb(_, __frame, 17, 21, function ___(__0, __4) {
/*   301 */                         response = __4;
/*   302 */                         __then();
/*   303 */                       }, true));
/*   304 */                     }
/*   305 */                   ;
/*   306 */                   })(function __$Node_prototype_index__13() {
                                if ((response.statusCode !== status.CREATED)) {
                                  return _(response);
/*   301 */                     }
                              ;
                                __then();
                              });
                            }, true));
                          }, true));
/*   310 */             });
/*   311 */           })(function ___(error, __result) {
                        __tryCatch(_, function __$Node_prototype_index__13() {
                          if (error) {
                            return _(adjustError(error));
                          }
                           else {
                            _(null, __result);
                          }
                        ;
                        });
                      });
/*   314 */         })(function ___() {
                      __tryCatch(_, _);
                    });
                  });
                };
                return Node;
              })(PropertyContainer);
            }).call(this);
